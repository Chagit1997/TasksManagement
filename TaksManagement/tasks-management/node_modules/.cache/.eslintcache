[{"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\index.tsx":"1","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\reportWebVitals.ts":"2","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\App.tsx":"3","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\router\\index.tsx":"4","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksManagement.tsx":"5","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\AddTask.tsx":"6","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksList.tsx":"7","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TaskViewer.tsx":"8","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\index.tsx":"9","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\reportWebVitals.ts":"10","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\App.tsx":"11","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\router\\index.tsx":"12","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksManagement.tsx":"13","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\AddTask.tsx":"14","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksList.tsx":"15","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TaskViewer.tsx":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":232,"mtime":1615241673993,"results":"20","hashOfConfig":"18"},{"size":546,"mtime":1615480521148,"results":"21","hashOfConfig":"18"},{"size":903,"mtime":1615483948438,"results":"22","hashOfConfig":"18"},{"size":3857,"mtime":1615483861880,"results":"23","hashOfConfig":"18"},{"size":1936,"mtime":1615483421415,"results":"24","hashOfConfig":"18"},{"size":1085,"mtime":1615417355909,"results":"25","hashOfConfig":"18"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":232,"mtime":1615509110377,"results":"29","hashOfConfig":"27"},{"size":546,"mtime":1615480521148,"results":"30","hashOfConfig":"27"},{"size":903,"mtime":1615483948438,"results":"31","hashOfConfig":"27"},{"size":3262,"mtime":1615698592509,"results":"32","hashOfConfig":"27"},{"size":1817,"mtime":1615509834380,"results":"33","hashOfConfig":"27"},{"size":1091,"mtime":1615698592485,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"nd3ncy",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1q1iyzz",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73"},"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\index.tsx",[],["74","75"],"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\reportWebVitals.ts",[],"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\App.tsx",[],"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\router\\index.tsx",[],"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksManagement.tsx",["76"],"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\AddTask.tsx",["77","78","79","80"],"C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksList.tsx",["81"],"﻿import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\nimport TaskViewer from './TaskViewer';\r\n\r\ninterface IState {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n};\r\n\r\ninterface IProps {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n}\r\n\r\n\r\nclass TasksList extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      taskLists: this.props.taskLists\r\n    };\r\n\r\n    this.reload = this.reload.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n\r\n  };\r\n\r\n  reload(event: any) {\r\n    fetch('api/TasksApi/GetTasks', {\r\n      method: 'GET',\r\n    }).then((response) => {\r\n        response.json().then((data: TasksTypes.Response.GetTaskResponse) => {\r\n          this.setState({ taskLists: data.tasks })\r\n      })\r\n    }).catch(() => {\r\n      alert(\"Server error\")\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps: IProps) {\r\n    debugger;\r\n    if (nextProps.taskLists !== this.state.taskLists) {\r\n      this.setState({ taskLists: nextProps.taskLists });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.setState({ taskLists: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {this.state.taskLists.length <= 0 && <div className=\"font-weight-bold text-center\">Tasks list is empty</div>}\r\n          \r\n          {this.state.taskLists.map((value, index) => {\r\n            return <div key={index} className=\"border m-3\"> <TaskViewer task={value}></TaskViewer></div>\r\n          })}\r\n          \r\n          <div className=\"d-flex\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={this.reload}>Reload</button>\r\n            <div className=\"flex-fill\"></div>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.clear} disabled={this.state.taskLists.length <= 0 }>Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;","C:\\Users\\chagi\\Documents\\Isracard\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TaskViewer.tsx",["82","83","84"],"C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\index.tsx",[],["85","86"],"C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\reportWebVitals.ts",[],"C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\App.tsx",[],"C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\router\\index.tsx",[],"C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksManagement.tsx",["87"],"﻿import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\nimport AddTask from './AddTask';\r\nimport TasksList from './TasksList';\r\n\r\ninterface IState {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n};\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nclass TasksManagement extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      taskLists: []\r\n    };\r\n  }\r\n\r\n  addTasks(task: TasksTypes.TaskDetails) {\r\n    this.setState({ taskLists: [...this.state.taskLists, task] })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\"><AddTask addTasks={this.addTasks.bind(this)}></AddTask></div>\r\n          <div className=\"col-6\"><TasksList taskLists={this.state.taskLists}></TasksList></div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksManagement;","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\AddTask.tsx",["88"],"﻿import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\n\r\ninterface IState {\r\n  taskContent: string;\r\n  imageName: string;\r\n  imageData: string | ArrayBuffer | null;\r\n};\r\n\r\ninterface IProps {\r\n  addTasks: Function;\r\n}\r\n\r\nclass AddTask extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      taskContent: \"chagit task - test\",\r\n      imageData: '',\r\n      imageName: '',\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  };\r\n\r\n  handleChange(event: any) {\r\n    this.setState({ taskContent: event.target.value, imageName: this.state.imageName, imageData: this.state.imageData});\r\n  }\r\n\r\n  handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    var request: TasksTypes.Request.SaveTaskRequest = {\r\n      TaskDetails: { taskContent: this.state.taskContent, imageName: this.state.imageName, imageData: this.state.imageData } as TasksTypes.TaskDetails\r\n    }\r\n\r\n    fetch('api/TasksApi/SaveTask', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(request)\r\n    }).then(() => {\r\n      this.props.addTasks(this.state);\r\n      alert(\"Task added\")\r\n      this.setState({ taskContent: '', imageData: null, imageName: '' });\r\n    }).catch(() => {\r\n      alert(\"Server error\")\r\n    });\r\n  }\r\n\r\n\r\n  imageUploaded(event: any) {\r\n    if (event.target.files.length > 1) {\r\n      alert(\"Cannot upload multiple images\");\r\n      return;\r\n    }\r\n\r\n    var image = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => this.setState({ taskContent: this.state.taskContent, imageData: reader.result, imageName: image.name });\r\n    if (image) {\r\n      reader.readAsDataURL(image);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n              <label>Task</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Task\" value={this.state.taskContent} onChange={this.handleChange.bind(this)} required={true} maxLength={30} />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Image</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"text\" className=\"form-control image-uploader pointer\" placeholder=\"Select your image\" disabled={true} value={this.state.imageName} />\r\n                <div className=\"input-group-append\" onClick={() => document.getElementById(\"uploadFile\")?.click()}>\r\n                  <input type=\"file\" id=\"uploadFile\" accept=\"image/*\" className=\"d-none\" placeholder=\"Selsct your image\" onChange={this.imageUploaded.bind(this)} />\r\n                  <span className=\"input-group-text\" id=\"basic-addon2\">Browse</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <button type=\"submit\" className=\"btn btn-success\">Add</button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TasksList.tsx",["89"],"﻿import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\nimport TaskViewer from './TaskViewer';\r\n\r\ninterface IState {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n};\r\n\r\ninterface IProps {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n}\r\n\r\n\r\nclass TasksList extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      taskLists: this.props.taskLists\r\n    };\r\n  };\r\n\r\n  reload() {\r\n    fetch('api/TasksApi/GetTasks', {\r\n      method: 'GET',\r\n    }).then((response) => {\r\n      response.json().then((data: TasksTypes.Response.GetTaskResponse) => {\r\n        this.setState({ taskLists: data.tasks })\r\n      })\r\n    }).catch(() => {\r\n      alert(\"Server error\")\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(newProps: IProps) {\r\n    if (newProps.taskLists !== this.state.taskLists) {\r\n      this.setState({ taskLists: newProps.taskLists });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.setState({ taskLists: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {this.state.taskLists.length <= 0 && <div className=\"font-weight-bold text-center\">Tasks list is empty</div>}\r\n\r\n          {this.state.taskLists.map((value, index) => {\r\n            return <div key={index} className=\"border m-3\"> <TaskViewer task={value}></TaskViewer></div>\r\n          })}\r\n\r\n          <div className=\"d-flex\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={this.reload.bind(this)}>Reload</button>\r\n            <div className=\"flex-fill\"></div>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.clear.bind(this)} disabled={this.state.taskLists.length <= 0}>Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;","C:\\Users\\chagi\\Documents\\Isracard\\review\\TaksManagement\\TaksManagement\\tasks-management\\src\\components\\TaskViewer.tsx",["90","91","92"],"﻿import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\n\r\n\r\ninterface IState {\r\n};\r\n\r\ninterface IProps {\r\n  task: TasksTypes.TaskDetails\r\n}\r\n\r\nclass TaskViewer extends React.Component<IProps, IState>  {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container p-3\">\r\n        <div className=\"d-flex\">\r\n          <div className=\"flex-fill\">\r\n            <div className=\"form-group\">\r\n              <label>Contetnt</label>\r\n              <div>{this.props.task.taskContent}</div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Image name</label>\r\n              <div>{this.props.task.imageName || 'No image'}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-container d-flex border\">\r\n            <img src={this.props.task.imageData} />\r\n            {!this.props.task.imageData && <div className=\"text-center flex-fill font-weight-bold\">No image</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskViewer;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"101"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":61,"column":58,"nodeType":"110","messageId":"100","endLine":61,"endColumn":60},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"111"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"112"},{"ruleId":"113","severity":1,"message":"114","line":14,"column":3,"nodeType":"115","messageId":"116","endLine":16,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":33,"column":13,"nodeType":"119","endLine":33,"endColumn":50},{"ruleId":"93","replacedBy":"120"},{"ruleId":"95","replacedBy":"121"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"122"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"123"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"124"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"100","fix":"125"},{"ruleId":"113","severity":1,"message":"114","line":14,"column":3,"nodeType":"115","messageId":"116","endLine":16,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":33,"column":13,"nodeType":"119","endLine":33,"endColumn":52},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"128","text":"129"},{"range":"130","text":"129"},"@typescript-eslint/no-unused-vars","'strict' is defined but never used.","Identifier","unusedVar","'read' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"131","text":"129"},{"range":"132","text":"129"},"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["126"],["127"],{"range":"133","text":"129"},{"range":"134","text":"129"},{"range":"135","text":"129"},{"range":"136","text":"129"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]