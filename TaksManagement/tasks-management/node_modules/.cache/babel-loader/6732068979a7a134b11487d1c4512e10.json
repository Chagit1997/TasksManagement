{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chagi\\\\Documents\\\\Isracard\\\\TaksManagement\\\\TaksManagement\\\\tasks-management\\\\src\\\\components\\\\TasksList.tsx\";\nimport React from 'react';\nimport TaskViewer from './TaskViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nclass TasksList extends React.Component {\n  constructor(props) {\n    super(props);\n    var tas = {\n      TaskContent: \"chagittttt\"\n    };\n    var tas1 = {\n      TaskContent: \"11111111111\"\n    };\n    var tas2 = {\n      TaskContent: \"22222222\"\n    };\n    this.state = {\n      taskLists: [tas, tas1, tas2]\n    };\n  }\n\n  reload(event) {\n    var data = fetch('api/TasksApi/GetTasks', {\n      method: 'GET'\n    }).then(response => {\n      response.json().then(data => {\n        console.log(data.tasks);\n        this.setState({\n          taskLists: data.tasks\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" All tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.taskLists.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(TaskViewer, {\n              task: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), this.state.taskLists]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: this.reload,\n          children: \"Reload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TasksList;","map":{"version":3,"sources":["C:/Users/chagi/Documents/Isracard/TaksManagement/TaksManagement/tasks-management/src/components/TasksList.tsx"],"names":["React","TaskViewer","TasksList","Component","constructor","props","tas","TaskContent","tas1","tas2","state","taskLists","reload","event","data","fetch","method","then","response","json","console","log","tasks","setState","render","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAIC;;AAOD,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwD;AAEtDC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACzB,UAAMA,KAAN;AACA,QAAIC,GAA2B,GAAG;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAlC;AACA,QAAIC,IAA4B,GAAG;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAnC;AACA,QAAIE,IAA4B,GAAG;AAAEF,MAAAA,WAAW,EAAE;AAAf,KAAnC;AACA,SAAKG,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CAACL,GAAD,EAAME,IAAN,EAAYC,IAAZ;AADA,KAAb;AAGD;;AAEDG,EAAAA,MAAM,CAACC,KAAD,EAAa;AACjB,QAAIC,IAAI,GAAGC,KAAK,CAAC,uBAAD,EAA0B;AACxCC,MAAAA,MAAM,EAAE;AADgC,KAA1B,CAAL,CAGTC,IAHS,CAGHC,QAAD,IAAc;AACjBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBH,IAAD,IAA+C;AAClEM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,KAAjB;AACA,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEG,IAAI,CAACQ;AAAlB,SAAd;AACH,OAHC;AAIH,KARU,CAAX;AASD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEE;AAAA,oBACG,KAAKd,KAAL,CAAWC,SAAX,CAAqBc,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1C,gCAAO,QAAC,UAAD;AAAY,cAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAQG,KAAKhB,KAAL,CAAWC,SARd;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAE,KAAKC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA9CqD;;AAiDxD,eAAeV,SAAf","sourcesContent":["import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\nimport TaskViewer from './TaskViewer';\r\n\r\ninterface IState {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n};\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n\r\nclass TasksList extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    var tas: TasksTypes.TaskDetails = { TaskContent: \"chagittttt\" };\r\n    var tas1: TasksTypes.TaskDetails = { TaskContent: \"11111111111\" };\r\n    var tas2: TasksTypes.TaskDetails = { TaskContent: \"22222222\" };\r\n    this.state = {\r\n      taskLists: [tas, tas1, tas2]\r\n    };\r\n  };\r\n\r\n  reload(event: any) {\r\n    var data = fetch('api/TasksApi/GetTasks', {\r\n      method: 'GET',\r\n    }).\r\n      then((response) => {\r\n        response.json().then((data: TasksTypes.Response.GetTaskResponse) => {\r\n          console.log(data.tasks);\r\n          this.setState({ taskLists: data.tasks })\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h1> All tasks</h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n\r\n          <ul>\r\n            {this.state.taskLists.map((value, index) => {\r\n              return <TaskViewer task={value}></TaskViewer>\r\n            })}\r\n          </ul>\r\n\r\n          {this.state.taskLists}\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={this.reload}>Reload</button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}