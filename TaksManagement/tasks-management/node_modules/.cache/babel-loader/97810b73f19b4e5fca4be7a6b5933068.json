{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chagi\\\\Documents\\\\Isracard\\\\TaksManagement\\\\TaksManagement\\\\tasks-management\\\\src\\\\components\\\\TasksList.tsx\";\nimport React from 'react';\nimport TaskViewer from './TaskViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nclass TasksList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskLists: []\n    };\n    this.reload = this.reload.bind(this);\n    this.clear = this.clear.bind(this);\n  }\n\n  reload(event) {\n    fetch('api/TasksApi/GetTasks', {\n      method: 'GET'\n    }).then(response => {\n      response.json().then(data => {\n        console.log(data.tasks);\n        this.setState({\n          taskLists: data.tasks\n        });\n      });\n    });\n  }\n\n  clear() {\n    this.setState({\n      taskLists: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [this.state.taskLists && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \"Tasks list is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.taskLists.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(TaskViewer, {\n                task: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 59\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: this.reload,\n            children: \"Reload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: this.clear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TasksList;","map":{"version":3,"sources":["C:/Users/chagi/Documents/Isracard/TaksManagement/TaksManagement/tasks-management/src/components/TasksList.tsx"],"names":["React","TaskViewer","TasksList","Component","constructor","props","state","taskLists","reload","bind","clear","event","fetch","method","then","response","json","data","console","log","tasks","setState","render","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAIC;;AAOD,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwD;AAEtDC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACzB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAIA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AAED;;AAEDD,EAAAA,MAAM,CAACG,KAAD,EAAa;AACjBC,IAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC7BC,MAAAA,MAAM,EAAE;AADqB,KAA1B,CAAL,CAEGC,IAFH,CAESC,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAD,IAA+C;AAClEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,aAAKC,QAAL,CAAc;AAAEd,UAAAA,SAAS,EAAEU,IAAI,CAACG;AAAlB,SAAd;AACH,OAHC;AAIH,KAPD;AAQD;;AAEDV,EAAAA,KAAK,GAAG;AACN,SAAKW,QAAL,CAAc;AAAEd,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEG,KAAKhB,KAAL,CAAWC,SAAX,iBAAwB;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF3B,eAKE;AAAA,oBACG,KAAKD,KAAL,CAAWC,SAAX,CAAqBgB,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1C,gCAAO;AAAiB,cAAA,SAAS,EAAC,QAA3B;AAAA,2CAAqC,QAAC,UAAD;AAAY,gBAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAArC;AAAA,eAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAkD,YAAA,OAAO,EAAE,KAAKjB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,gBAAhC;AAAiD,YAAA,OAAO,EAAE,KAAKE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAtDqD;;AAyDxD,eAAeR,SAAf","sourcesContent":["import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\nimport TaskViewer from './TaskViewer';\r\n\r\ninterface IState {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n};\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n\r\nclass TasksList extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      taskLists: []\r\n    };\r\n\r\n    this.reload = this.reload.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n\r\n  };\r\n\r\n  reload(event: any) {\r\n    fetch('api/TasksApi/GetTasks', {\r\n      method: 'GET',\r\n    }).then((response) => {\r\n        response.json().then((data: TasksTypes.Response.GetTaskResponse) => {\r\n          console.log(data.tasks);\r\n          this.setState({ taskLists: data.tasks })\r\n      })\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.setState({ taskLists: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n\r\n          {this.state.taskLists && <div className=\"\">Tasks list is empty</div>}\r\n\r\n\r\n          <ul>\r\n            {this.state.taskLists.map((value, index) => {\r\n              return <div key={index} className=\"border\"> <TaskViewer task={value}></TaskViewer></div>\r\n            })}\r\n          </ul>\r\n\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <div className=\"d-flex\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={this.reload}>Reload</button>\r\n            <div className=\"flex-fill\"></div>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.clear}>Clear</button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}