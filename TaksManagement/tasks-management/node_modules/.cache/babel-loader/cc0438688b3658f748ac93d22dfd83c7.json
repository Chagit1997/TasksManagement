{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chagi\\\\Documents\\\\Isracard\\\\TaksManagement\\\\TaksManagement\\\\tasks-management\\\\src\\\\components\\\\TasksList.tsx\";\nimport React from 'react';\nimport TaskViewer from './TaskViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nclass TasksList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadApi = () => {\n      var request = {};\n      fetch('api/TasksApi/GetTasks', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n      }).then(response => response.json()).then(result => {\n        this.setState({\n          taskLists: result.tasks\n        });\n      });\n    };\n\n    this.reload = this.reloadApi;\n    this.state = {\n      taskLists: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" All tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.taskLists.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(TaskViewer, {\n              task: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), this.state.taskLists]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: this.reload,\n          children: \"Reload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TasksList;","map":{"version":3,"sources":["C:/Users/chagi/Documents/Isracard/TaksManagement/TaksManagement/tasks-management/src/components/TasksList.tsx"],"names":["React","TaskViewer","TasksList","Component","constructor","props","reloadApi","request","fetch","method","mode","headers","body","JSON","stringify","then","response","json","result","setState","taskLists","tasks","reload","state","render","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAIC;;AAOD,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwD;AAEtDC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACzB,UAAMA,KAAN;;AADyB,SA0B3BC,SA1B2B,GA0Bf,MAAM;AAChB,UAAIC,OAA0C,GAAG,EAAjD;AAEAC,MAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC7BC,QAAAA,MAAM,EAAE,MADqB;AAE7BC,QAAAA,IAAI,EAAE,MAFuB;AAG7BC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAHoB;AAM7BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AANuB,OAA1B,CAAL,CAQGQ,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,MAAM,IAAI;AACd,aAAKC,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEF,MAAM,CAACG;AAApB,SAAd;AACD,OAXH;AAYD,KAzC0B;;AAAA,SA0C3BC,MA1C2B,GA0ClB,KAAKhB,SA1Ca;AAEzB,SAAKiB,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAyCDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEE;AAAA,oBACG,KAAKD,KAAL,CAAWH,SAAX,CAAqBK,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1C,gCAAO,QAAC,UAAD;AAAY,cAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAQG,KAAKH,KAAL,CAAWH,SARd;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAE,KAAKE,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAtEqD;;AAyExD,eAAepB,SAAf","sourcesContent":["import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\nimport TaskViewer from './TaskViewer';\r\n\r\ninterface IState {\r\n  taskLists: TasksTypes.TaskDetails[]\r\n};\r\n\r\ninterface IProps {\r\n  \r\n}\r\n\r\n\r\nclass TasksList extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      taskLists: []\r\n    };\r\n  };\r\n\r\n  //reload(event: any) {\r\n  //  var request: TasksTypes.Request.GetTaskRequest = {}\r\n  //  fetch('api/TasksApi/GetTasks', {\r\n  //    method: 'POST',\r\n  //    mode: 'cors',\r\n  //    headers: {\r\n  //      'Content-Type': 'application/json'\r\n  //    },\r\n  //    body: JSON.stringify(request)\r\n  //  })\r\n  //    .then(response => response.json())\r\n  //    .then((data: any) => {\r\n  //      this.setState({\r\n  //        taskLists: data.tasks\r\n  //      });\r\n  //    });\r\n  //}\r\n\r\n\r\n  reloadApi = () => {\r\n    var request: TasksTypes.Request.GetTaskRequest = {}\r\n\r\n    fetch('api/TasksApi/GetTasks', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(request)\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({ taskLists: result.tasks })\r\n      })\r\n  };\r\n  reload = this.reloadApi\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h1> All tasks</h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n\r\n          <ul>\r\n            {this.state.taskLists.map((value, index) => {\r\n              return <TaskViewer task={value}></TaskViewer>\r\n            })}\r\n          </ul>\r\n\r\n          {this.state.taskLists}\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={this.reload}>Reload</button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}