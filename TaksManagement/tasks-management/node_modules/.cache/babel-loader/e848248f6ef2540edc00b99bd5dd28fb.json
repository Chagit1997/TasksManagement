{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chagi\\\\Documents\\\\Isracard\\\\review\\\\TaksManagement\\\\TaksManagement\\\\tasks-management\\\\src\\\\components\\\\AddTask.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskContent: \"chagit task - test\",\n      imageData: '',\n      imageName: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      taskContent: event.target.value,\n      imageName: this.state.imageName,\n      imageData: this.state.imageData\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var request = {\n      TaskDetails: {\n        taskContent: this.state.taskContent,\n        imageName: this.state.imageName,\n        imageData: this.state.imageData\n      }\n    };\n    fetch('api/TasksApi/SaveTask', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    }).then(() => {\n      this.props.addTasks(this.state);\n      alert(\"Task added\");\n      this.setState({\n        taskContent: '',\n        imageData: null,\n        imageName: ''\n      });\n    }).catch(() => {\n      alert(\"Server error\");\n    });\n  }\n\n  imageUploaded(event) {\n    if (event.target.files.length > 1) {\n      alert(\"Cannot upload multiple images\");\n      return;\n    }\n\n    var image = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => this.setState({\n      taskContent: this.state.taskContent,\n      imageData: reader.result,\n      imageName: image.name\n    });\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Task\",\n                value: this.state.taskContent,\n                onChange: this.handleChange.bind(this),\n                required: true,\n                maxLength: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control image-uploader pointer\",\n                placeholder: \"Select your image\",\n                disabled: true,\n                value: this.state.imageName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                onClick: () => {\n                  var _document$getElementB;\n\n                  return (_document$getElementB = document.getElementById(\"uploadFile\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"uploadFile\",\n                  accept: \"image/*\",\n                  className: \"d-none\",\n                  placeholder: \"Selsct your image\",\n                  onChange: this.imageUploaded.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"input-group-text\",\n                  id: \"basic-addon2\",\n                  children: \"Browse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["C:/Users/chagi/Documents/Isracard/review/TaksManagement/TaksManagement/tasks-management/src/components/AddTask.tsx"],"names":["React","AddTask","Component","constructor","props","state","taskContent","imageData","imageName","handleSubmit","bind","handleChange","event","setState","target","value","preventDefault","request","TaskDetails","fetch","method","mode","headers","body","JSON","stringify","then","addTasks","alert","catch","imageUploaded","files","length","image","reader","FileReader","onload","result","name","readAsDataURL","render","document","getElementById","click"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TasksTypes } from '../types/Task';\r\n\r\ninterface IState {\r\n  taskContent: string;\r\n  imageName: string;\r\n  imageData: string | ArrayBuffer | null;\r\n};\r\n\r\ninterface IProps {\r\n  addTasks: Function;\r\n}\r\n\r\nclass AddTask extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      taskContent: \"chagit task - test\",\r\n      imageData: '',\r\n      imageName: '',\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  };\r\n\r\n  handleChange(event: any) {\r\n    this.setState({ taskContent: event.target.value, imageName: this.state.imageName, imageData: this.state.imageData});\r\n  }\r\n\r\n  handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    var request: TasksTypes.Request.SaveTaskRequest = {\r\n      TaskDetails: { taskContent: this.state.taskContent, imageName: this.state.imageName, imageData: this.state.imageData } as TasksTypes.TaskDetails\r\n    }\r\n\r\n    fetch('api/TasksApi/SaveTask', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(request)\r\n    }).then(() => {\r\n      this.props.addTasks(this.state);\r\n      alert(\"Task added\")\r\n      this.setState({ taskContent: '', imageData: null, imageName: '' });\r\n    }).catch(() => {\r\n      alert(\"Server error\")\r\n    });\r\n  }\r\n\r\n\r\n  imageUploaded(event: any) {\r\n    if (event.target.files.length > 1) {\r\n      alert(\"Cannot upload multiple images\");\r\n      return;\r\n    }\r\n\r\n    var image = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => this.setState({ taskContent: this.state.taskContent, imageData: reader.result, imageName: image.name });\r\n    if (image) {\r\n      reader.readAsDataURL(image);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n              <label>Task</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Task\" value={this.state.taskContent} onChange={this.handleChange.bind(this)} required={true} maxLength={30} />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Image</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"text\" className=\"form-control image-uploader pointer\" placeholder=\"Select your image\" disabled={true} value={this.state.imageName} />\r\n                <div className=\"input-group-append\" onClick={() => document.getElementById(\"uploadFile\")?.click()}>\r\n                  <input type=\"file\" id=\"uploadFile\" accept=\"image/*\" className=\"d-none\" placeholder=\"Selsct your image\" onChange={this.imageUploaded.bind(this)} />\r\n                  <span className=\"input-group-text\" id=\"basic-addon2\">Browse</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <button type=\"submit\" className=\"btn btn-success\">Add</button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}